# Spring application name
spring.application.name=VideoPlatformAPI
#spring.config.import=optional:file:.env[.properties]

# Static files serving
spring.web.resources.static-locations=file:./videos-dir/

# Mail configuration
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.port=587
spring.mail.host=smtp.gmail.com
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.auth=true

# Allow bean definition overriding
spring.main.allow-bean-definition-overriding=true

# JPA and Hibernate configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
#spring.jpa.show-sql=true

# Servlet multipart configuration
spring.servlet.multipart.max-file-size=2GB
spring.servlet.multipart.max-request-size=2GB

# FFmpeg and FFprobe paths
spring.ffmpeg-path=${FFMPEG_PATH:/bin/ffmpeg}
spring.ffprobe-path=${FFPROBE_PATH:/bin/ffprobe}

# MongoDB connection
spring.data.mongodb.uri=${MONGODB_URI:mongodb://localhost}
spring.data.mongodb.port=27017
spring.data.mongodb.database=videoplatform

# PostgreSQL connection
spring.datasource.url=${POSTGRES_URL:jdbc:postgresql://localhost:5432/videoplatform}
spring.datasource.username=${POSTGRES_USERNAME:postgres}
spring.datasource.password=${POSTGRES_PASSWORD:postgres}

# RabbitMQ configuration
spring.rabbitmq.host=${RABBITMQ_HOST:host.docker.internal}
spring.rabbitmq.port=5672
spring.rabbitmq.username=${RABBITMQ_USERNAME:guest}
spring.rabbitmq.password=${RABBITMQ_PASSWORD:guest}

# MVC path matching strategy
spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER

# Logging levels
logging.level.org.springframework.security=DEBUG

# Image storage cloud
cloudinary.cloud-name=${CLOUDINARY_CLOUD_NAME}
cloudinary.api-secret=${CLOUDINARY_API_SECRET}
cloudinary.api-key=${CLOUDINARY_API_KEY}

# RabbitMQ exchange and routing key
rabbitmq.exchange.name=videoplatform.topic.exchange
rabbitmq.routing.key=notification_routing_key

# Server configuration
server.port=8000
server.error.include-message=always

# Eureka
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
#eureka.client.service-url.enabled=true
#eureka.client.service-url.fetch-registry=true
#eureka.client.service-url.register-with-eureka=true
#eureka.instance.prefer-ip-address=true
